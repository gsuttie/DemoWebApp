@page "/"
@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration

<PageTitle>Cloud Adventures Order Processing</PageTitle>

<h1>@Configuration["EnvType"]</h1>
<h1>@Configuration["SolutionVersion"]</h1>

<center>
 <img src="/img/cloudadventures.png" alt="Cloud" />
  <img src='@Configuration["image"]' alt="Cloud2" />
</center>

 <div>    
    <table class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>Item</th>
                <th>Count</th>
                <th>Order Time</th>
            </tr>
        </thead>
        <tbody>
    @foreach (var order in orders)
    {
        <tr>
        <td>@order.Item</td>
        <td>@order.Count</td>
        <td>@order.OrderTime</td>
        </tr>
    }
    </tbody>
    </table>
    </div>
<br>

Item (select): <select class="form-control selectpicker"  placeholder="Place Order" @bind="newOrder">
                 @foreach(var item in availableItems)
                     {
                         <option>@item</option>
                     }
                     </select>
                     <br>

Number of items (select): <br> <select class="form-control selectpicker" placeholder="Order Count" @bind="orderCount">
                 @foreach(var count in itemCount)
                     {
                         <option>@count</option>
                     }
                     </select>
<button @onclick="AddItem">Add Order</button>
<button @onclick="ClearItems">Clear Orders</button>


<br>


<br><br><br>
@code {
    private List<OrderItem> orders = new();

    private string newOrder = "Office 365 E3 License";
    private string orderCount = "1";
 
    private void AddItem()
    {
        if (!string.IsNullOrWhiteSpace(newOrder))
        {             
            orders.Add(new OrderItem { 
                Item = newOrder,
                Count = int.Parse(orderCount),
                OrderTime = DateTime.Now});
        }
    }

    private void ClearItems()
    {
        orders.Clear();
    }
    private Task PopulateOrders() {
        orders.Add(new OrderItem { 
            Item = "Office 365 E3 License",
            Count = 20,
            OrderTime = DateTime.Now.AddMinutes(-10).AddSeconds(-3)});
        orders.Add(new OrderItem { 
            Item = "Office 365 E3 License",
            Count = 50,
            OrderTime = DateTime.Now.AddMinutes(-17).AddSeconds(-7)});
        orders.Add(new OrderItem { 
            Item = "Office 365 F1 License",
            Count = 10,
            OrderTime = DateTime.Now.AddMinutes(-52).AddSeconds(-24)});
            return Task.CompletedTask;
    }

    protected override async Task OnInitializedAsync()
    {
        await PopulateOrders();
    }
    

    public List<string> availableItems = new List<string>(new string[] { "Office 365 E3 License", "Office 365 E5 License", "Office 365 F1 License" });
    public List<string> itemCount = new List<string>(new string[] { "1", "5", "10", "20", "50", "100", "150", "500" });
}